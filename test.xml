<project name="tests" default="all">

    <property name="classpath" value="${basedir}/build:${basedir}/bin/freemarker.jar"/>
	<property name="outputdir" value="${basedir}/test.tmp"/>

 <target name="all" description="run functional test cases">
	    <delete dir="test.tmp" />
	    <mkdir dir="test.tmp" />
	    <java classpath="${classpath}" classname="com.javacc.Main">
	    	<arg value="-q"/>
			<arg value="-BASE_SRC_DIR=${outputdir}/CORBA-IDL"/>
			<arg value="legacy-examples/CORBA-IDL/IDL.javacc"/>
		</java>
	    <javac srcdir="${outputdir}/CORBA-IDL" includeantruntime="no" />
	    <copy todir="${outputdir}/CORBA-IDL/">
	      <fileset dir="legacy-examples/CORBA-IDL">
	        <include name="*.idl" />
	      </fileset>
	    </copy>
	    <java failonerror="true" fork="true" classname="IDLParser" classpath="test.tmp/CORBA-IDL:${FREEMARKER_JAR}" outputproperty="test.corba.out">
	      <arg line="${outputdir}/CORBA-IDL/Hello.idl" />
	                <assertions><enable/></assertions>
	    </java>

	    <echo>${test.corba.out}</echo>

	    <fail message="CORBA failed">
	     <condition>
	      <not>
	       <contains string="${test.corba.out}" substring="IDL file parsed successfully" />
	      </not>
	     </condition>
	    </fail>

	    <echo />

	    <copy todir="test.tmp/GUIParsing/ParserVersion">
	      <fileset dir="legacy-examples/GUIParsing/ParserVersion">
	        <include name="*.java" />
	      </fileset>
	    </copy>

	    <java classpath="${classpath}" classname="com.javacc.Main">
	    	<arg value="-q"/>
			<arg value="-BASE_SRC_DIR=${outputdir}/GUIParsing/ParserVersion"/>
			<arg value="legacy-examples/GUIParsing/ParserVersion/CalcInput.javacc"/>
		</java>
	    <javac srcdir="${outputdir}/GUIParsing/ParserVersion" includeantruntime="no" />

	    <echo />

	    <copy todir="test.tmp/GUIParsing/LexerVersion">
	      <fileset dir="legacy-examples/GUIParsing/LexerVersion">
	        <include name="*.java" />
	      </fileset>
	    </copy>

	    <java classpath="${classpath}" classname="com.javacc.Main">
	    	<arg value="-q"/>
			<arg value="-BASE_SRC_DIR=${outputdir}/GUIParsing/LexerVersion"/>
			<arg value="legacy-examples/GUIParsing/LexerVersion/CalcInput.javacc"/>
		</java>
	    <javac srcdir="${outputdir}/GUIParsing/LexerVersion" includeantruntime="no" />

	    <echo />

	    <copy todir="${outputdir}/Interpreter">
	      <fileset dir="legacy-examples/Interpreter">
	        <include name="*.java" />
	      </fileset>
	    </copy>

	    <java classpath="${classpath}" classname="com.javacc.Main">
	    	<arg value="-q"/>
			<arg value="-BASE_SRC_DIR=${outputdir}/Interpreter"/>
			<arg value="legacy-examples/Interpreter/SPL.javacc"/>
		</java>
	 <copy todir="${outputdir}/Interpreter/">
	      <fileset dir="legacy-examples/Interpreter/">
	        <include name="*.spl" />
	      </fileset>
	    </copy>

 	    <javac srcdir="${outputdir}/Interpreter" debug="on" includeantruntime="no" />

	    <java failonerror="true" fork="true"
	          classname="SPLParser"
	          classpath="test.tmp/Interpreter/"
	          inputstring="3"
	          outputproperty="spl.out1"
	    >
	      <arg line="test.tmp/Interpreter/fact.spl" />
	      	                <assertions><enable/></assertions>

	    </java>
	    <echo>${spl.out1}</echo>
	    <fail message="SPLParser fact parse failed">
	     <condition>
	      <not>
	       <contains string="${spl.out1}" substring="Value of fact : 6" />
	      </not>
	     </condition>
	    </fail>
	    <java failonerror="true" fork="true"
	          classname="SPLParser"
	          classpath="test.tmp/Interpreter/"
	          inputstring="3"
	          outputproperty="spl.out2"
	    >
	      <arg line="test.tmp/Interpreter/odd.spl" />
	      	                <assertions><enable/></assertions>
	    </java>
	    <echo>${spl.out2}</echo>
	    <fail message="SPLParser odd parse failed">
	     <condition>
	      <not>
	       <contains string="${spl.out2}" substring="Value of odd : true" />
	      </not>
	     </condition>
	    </fail>
	    <java failonerror="true" fork="true"
	          classname="SPLParser"
	          classpath="test.tmp/Interpreter/"
	          inputstring="9"
	          outputproperty="spl.out3"
	    >
	      <arg line="test.tmp/Interpreter/sqrt.spl" />
   	                <assertions><enable/></assertions>
	    </java>
	    <echo>${spl.out3}</echo>
	    <fail message="SPLParser sqrt parse failed">
	     <condition>
	      <not>
	       <contains string="${spl.out3}" substring="Value of sqrt : 3" />
	      </not>
	     </condition>
	    </fail>

	    <echo />

	    <java classpath="${classpath}" classname="com.javacc.Main">
	    	<arg value="-q"/>
			<arg value="-BASE_SRC_DIR=${outputdir}/TreeBuildingExamples.eg1"/>
			<arg value="legacy-examples/TreeBuildingExamples/eg1.javacc"/>
		</java>
	    <javac debug="on" srcdir="${outputdir}/TreeBuildingExamples.eg1" includeantruntime="no" />

	    <java failonerror="true" fork="true"
	          classname="Eg1"
	          classpath="test.tmp/TreeBuildingExamples.eg1/"
	          inputstring="(a + b) * (c + 1);"
	          outputproperty="jjtree.eg1.out"
	    >
	    	                <assertions><enable/></assertions>
	    </java>
	    <echo>${jjtree.eg1.out}</echo>
	    <fail message="JJTree eg1 parse failed">
	     <condition>
	      <not>
	       <contains string="${jjtree.eg1.out}" substring="Thank you." />
	      </not>
	     </condition>
	    </fail>

	    <echo />

	    <copy todir="test.tmp/TreeBuildingExamples.eg2">
	      <fileset dir="legacy-examples/TreeBuildingExamples">
	        <include name="*.java" />
	        <exclude name="Eg4DumpVisitor.java" />
	      </fileset>
	    </copy>

	    <java classpath="${classpath}" classname="com.javacc.Main">
	    	<arg value="-q"/>
			<arg value="-BASE_SRC_DIR=${outputdir}/TreeBuildingExamples.eg2"/>
			<arg value="legacy-examples/TreeBuildingExamples/eg2.javacc"/>
		</java>
	    <javac srcdir="${outputdir}/TreeBuildingExamples.eg2" includes="Eg2.java" includeantruntime="no" />

	    <java failonerror="true" fork="true"
	          classname="Eg2"
	          classpath="test.tmp/TreeBuildingExamples.eg2/"
	          inputstring="(a + b) * (c + 1);"
	          outputproperty="jjtree.eg2.out"
	    >
	    	                <assertions><enable/></assertions>
	    </java>
	    <echo>${jjtree.eg2.out}</echo>
	    <fail message="JJTree eg2 parse failed">
	     <condition>
	      <not>
	       <contains string="${jjtree.eg2.out}" substring="Thank you." />
	      </not>
	     </condition>
	    </fail>
	    <echo />

	    <copy todir="test.tmp/TreeBuildingExamples.eg3">
	      <fileset dir="legacy-examples/TreeBuildingExamples">
	        <include name="*.java" />
	        <exclude name="Eg4DumpVisitor.java" />
	        <exclude name="ASTMyOtherID.java" />
	      </fileset>
	    </copy>

	    <java classpath="${classpath}" classname="com.javacc.Main">
	    	<arg value="-q"/>
			<arg value="-BASE_SRC_DIR=${outputdir}/TreeBuildingExamples.eg3"/>
			<arg value="legacy-examples/TreeBuildingExamples/eg3.javacc"/>
		</java>
	    <javac srcdir="test.tmp/TreeBuildingExamples.eg3" includeantruntime="no" />

	    <java failonerror="true" fork="true"
	          classname="Eg3"
	          classpath="test.tmp/TreeBuildingExamples.eg3/"
	          inputstring="(a + b) * (c + 1);"
	          outputproperty="jjtree.eg3.out"
	    >
	    	      	                <assertions><enable/></assertions>
	    </java>
	    <echo>${jjtree.eg3.out}</echo>
	    <fail message="JJTree eg3 parse failed">
	     <condition>
	      <not>
	       <contains string="${jjtree.eg3.out}" substring="Thank you." />
	      </not>
	     </condition>
	    </fail>


	    <echo />

	    <copy todir="test.tmp/TreeBuildingExamples.eg4">
	      <fileset dir="legacy-examples/TreeBuildingExamples">
	        <include name="*.java" />
	      </fileset>
	    </copy>

	    <java classpath="${classpath}" classname="com.javacc.Main">
	    	<arg value="-q"/>
			<arg value="-BASE_SRC_DIR=${outputdir}/TreeBuildingExamples.eg4"/>
			<arg value="legacy-examples/TreeBuildingExamples/eg4.javacc"/>
		</java>
	    <javac srcdir="test.tmp/TreeBuildingExamples.eg4" debug="true" includeantruntime="no" />

	    <java failonerror="true" fork="true"
	          classname="Eg4"
	          classpath="test.tmp/TreeBuildingExamples.eg4/"
	          inputstring="(a + b) * (c + 1);"
	          outputproperty="jjtree.eg4.out"
	    >
	    	      	                <assertions><enable/></assertions>
	    </java>
	    <echo>${jjtree.eg4.out}</echo>
	    <fail message="JJTree eg4 parse failed">
	     <condition>
	      <not>
	       <contains string="${jjtree.eg4.out}" substring="Thank you." />
	      </not>
	     </condition>
	    </fail>

	    <echo />

	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/Lookahead.eg1"/>
		 <arg value="legacy-examples/Lookahead/Example1.javacc"/>
	 </java>

	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/Lookahead.eg2"/>
		 <arg value="legacy-examples/Lookahead/Example2.javacc"/>
	 </java>

	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/Lookahead.eg4"/>
		 <arg value="legacy-examples/Lookahead/Example4.javacc"/>
	 </java>


	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/Lookahead.eg5"/>
		 <arg value="legacy-examples/Lookahead/Example5.javacc"/>
	 </java>

	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/Lookahead.eg6"/>
		 <arg value="legacy-examples/Lookahead/Example6.javacc"/>
	 </java>

	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/Lookahead.eg7"/>
		 <arg value="legacy-examples/Lookahead/Example7.javacc"/>
	 </java>

	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/Lookahead.eg8"/>
		 <arg value="legacy-examples/Lookahead/Example8.javacc"/>
	 </java>

	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/Lookahead.eg9"/>
		 <arg value="legacy-examples/Lookahead/Example9.javacc"/>
	 </java>

	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/Lookahead.eg10"/>
		 <arg value="legacy-examples/Lookahead/Example10.javacc"/>

	 </java>


	 <echo />

	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/MailProcessing"/>
		 <arg value="legacy-examples/MailProcessing/Digest.javacc"/>
	 </java>

	 <java classpath="${classpath}" classname="com.javacc.Main">
    	<arg value="-q"/>
		 <arg value="-BASE_SRC_DIR=${outputdir}/MailProcessing"/>
		 <arg value="legacy-examples/MailProcessing/Faq.javacc"/>
	 </java>

	 <javac srcdir="test.tmp/MailProcessing" includeantruntime="no"/>
	    <echo />
	  </target>
</project>
