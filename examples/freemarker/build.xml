<?xml version='1.0' encoding='ISO-8859-1' ?>

<project name="FreeMarker Parser" default="build" basedir=".">

<target name="clean">
    <delete dir="fel"/>
     <delete dir="ftl"/>
</target>

<target name="init">
   <mkdir dir="fel"/>
   <mkdir dir="ftl"/>
</target>

<target name="build" depends="init">
    <java classname="com.javacc.Main" classpath="${basedir}/../../build:${basedir}/../../bin/javacc.jar:${basedir}/../../bin/freemarker.jar">
      <arg value="-q"/>
      <arg value="${basedir}/FEL.javacc"/>
    </java>
    <java classname="com.javacc.Main" classpath="${basedir}/../../build:${basedir}/../../bin/javacc.jar:${basedir}/../../bin/freemarker.jar">
        <arg value="${basedir}/FTL.javacc"/>
    </java>

    <javac classpath="." debug="on" srcdir="." includeantruntime="no" />
</target>

<target name="test" depends="build">
     <echo>Here is a really simple FEL example: 2+2</echo>
     <java fork="true" failonerror="true" classname="fel.FELParser" inputstring="2+2"/>
     <echo>Okay, a bit more complex example now: x.y.z(foo, &quot;bar&quot;)?upper_case</echo>
     <java fork="true" failonerror="true" classname="fel.FELParser" inputstring='x.y.z(foo, "bar")?upper_case'/>
	 <echo>Now let's try out the full FTL parser on the templates used in JavaCC</echo>
     <java fork="true" failonerror="true" classname="ftl.FTLParser">
     	 <arg value = "../../src/templates/java"/>
	 </java>
</target>

</project>
